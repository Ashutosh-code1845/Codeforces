//https://www.youtube.com/watch?v=hSRT2GZDc70&t=1378s&ab_channel=CPWithAbhinav
//Observational : For having equality 1 the repeating part should have len-3 moves because 
//change propagate hone mein for elements other than first and last will take len-3 moves
//try for 1 1 1 1 1 it will give 1 2 3 3 1 
//exception comes for len = 3 where it will be 1 always ex 1 1 1 will change to 1 2 2

#include <bits/stdc++.h>
#define fastIO ios::sync_with_stdio(false); cin.tie(0)
using namespace std;

#define py cout<<"YES"<<endl;
#define pn cout<<"NO"<<endl;
#define lli long long int
#define pb push_back
#define as(v) v.begin(), v.end()
#define ras(v) v.rbegin(), v.rend()


void solve()
{
    int n;
    cin>>n;
    
    vector<int> arr(n);
    for(int i=0; i<n; i++)
    cin>>arr[i];
    
    int count=0;
    
    for(int i=0; i<n-1; i++)
    {
        if(arr[i+1] == arr[i] )
        count++;
    }
    
    if(count<=1)
    {
        cout<<0<<endl;
        return;
    }
    
    int l=-1;
    int r=-1;
    
    for(int i=0; i<n-1; i++)
    {
        if(arr[i+1]==arr[i])
        {
            if(l==-1)
            {
                l=i;
                r=i+1;
            }
            r=i+1;
        }
    }
    
    int x = r-l+1;
    
    if(x==3)
    cout<<1<<endl;
    else
    cout<<x-3<<endl;
}

int main() {
    fastIO;
    int t;
    cin>>t;
    // solve();
    while(t--)
    {
        solve();
    }
    return 0;
}
